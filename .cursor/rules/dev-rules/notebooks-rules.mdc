---
description:
globs: notebooks/**
alwaysApply: false
---
# Notebooks Rules

## ファイル命名規則
- 分析用のPythonファイルは`notebooks/`ディレクトリに配置
- ファイル名は`XX_説明.py`の形式（XXは連番）
- 例：`01_eda.py`, `02_feature_engineering.py`

## コードスタイル
- Jupytextのpercent形式を使用
- セル区切りは`# %%`を使用
- マークダウンセルは`# %% [markdown]`を使用

## ディレクトリ構造
```
notebooks/
├── figures/          # グラフの保存先
├── 01_eda.py        # 探索的分析
├── 02_feature_engineering.py  # 特徴量エンジニアリング
└── 03_model_analysis.py      # モデル分析
```

## 出力ファイル
- グラフは`notebooks/figures/`に保存
- ファイル名は`説明.png`の形式
- 例：`survival_count.png`, `correlation_matrix.png`

## コードの構造
1. インポート
2. 設定（表示設定など）
3. データ読み込み
4. 分析関数
5. メイン関数

## コメント
- 関数の説明はdocstringを使用
- セルの説明はマークダウンセルを使用
- コード内の重要な部分にはコメントを追加

## 可視化
- グラフのサイズは`plt.figure(figsize=(width, height))`で指定
- タイトルは日本語で記述
- 保存前に`plt.close()`を呼び出し

## エラー処理
- データ読み込み時のエラー処理
- ファイル保存時のエラー処理
- 必要なディレクトリの自動作成

## パフォーマンス
- 大きなデータセットの場合はチャンク処理
- メモリ使用量の最適化
- 不要なデータの削除

## バージョン管理
- 重要な変更はコミットメッセージに記載
- グラフのバージョン管理
- 中間データの保存

## ドキュメント
- READMEに分析の概要を記載
- 各分析の目的と結果を記録
- 次のステップを明確化
