---
description:
globs:
alwaysApply: false
---
# Gitワークフロー標準

## 1. ブランチ戦略
- メインブランチ: `main`
- 開発ブランチ: `develop`
- 機能ブランチ: `feature/{feature_name}`
- バグ修正ブランチ: `fix/{bug_description}`
- 実験ブランチ: `experiment/{experiment_name}`

## 2. コミットメッセージ規約
```
<type>(<scope>): <subject>

<body>

<footer>
```

### タイプ
- `feat`: 新機能
- `fix`: バグ修正
- `docs`: ドキュメントのみの変更
- `style`: コードの意味に影響を与えない変更
- `refactor`: バグ修正や機能追加を含まないコードの変更
- `test`: テストの追加・修正
- `chore`: ビルドプロセスやツールの変更

### スコープ
- `ml`: 機械学習関連
- `data`: データ処理関連
- `infra`: インフラ関連
- `docs`: ドキュメント関連

## 3. プルリクエスト
- タイトル: 変更内容を簡潔に
- 説明: 変更の詳細、関連Issue、テスト結果
- レビュアー: 最低1名
- マージ条件: レビュー承認、CI成功

## 4. コードレビュー
- 機能性の確認
- コード品質の確認
- テストの確認
- ドキュメントの確認

## 5. マージルール
- マージ前に最新の`main`を取り込む
- コンフリクトは開発者が解決
- マージ後はブランチを削除
- マージ後は`main`をプッシュ
